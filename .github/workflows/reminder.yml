name: PR Approval Reminder
on:
  schedule:
    # Executa a cada 1 minuto
    - cron: '*/1 * * * *'

jobs:
  reminder:
    runs-on: ubuntu-latest
    steps:
      # Configurar GitHub CLI com token
      - name: Configurar GitHub CLI
        run: echo "${{secrets.GT_TOKEN}}" | gh auth login --with-token

      # Buscar PRs abertas
      - name: Buscar PRs abertas
        run: |
          gh pr list --state open --json number,title,reviewDecision,reviews > prs_abertas.json
          cat prs_abertas.json

      # Enviar lembretes para Google Chat
      - name: Enviar Lembretes para Google Chat
        env:
          WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
        run: |
          if [ -s prs_abertas.json ]; then
            jq -c '.[]' prs_abertas.json | while read -r pr; do
              number=$(echo $pr | jq -r '.number')
              title=$(echo $pr | jq -r '.title')
              reviewDecision=$(echo $pr | jq -r '.reviewDecision')
              reviews=$(echo $pr | jq -r '.reviews | length')

              # Inicializa o status de merge como 'false'
              merged="false"

              # Busca detalhes apenas se a PR estiver aprovada
              if [[ $reviewDecision == "APPROVED" ]]; then
                merged=$(gh pr view "$number" --json merged --jq '.merged')
              fi

              # Verifica PR sem nenhuma aprovação
              if [[ $reviews -eq 0 ]]; then
                curl -X POST -H "Content-Type: application/json" \
                -d "{\"text\":\"PR aberta sem revisões: $title\"}" $WEBHOOK_URL

              # Verifica PR com menos de 2 revisores
              elif [[ $reviews -lt 2 ]] && [[ $reviewDecision != "APPROVED" ]]; then
                curl -X POST -H "Content-Type: application/json" \
                -d "{\"text\":\"PR $title está aguardando revisões (apenas $reviews revisores até agora).\"}" $WEBHOOK_URL

              # Verifica PR com duas aprovações, mas sem merge
              elif [[ $reviewDecision == "APPROVED" ]] && [[ $merged == "false" ]]; then
                curl -X POST -H "Content-Type: application/json" \
                -d "{\"text\":\"PR aprovada, mas ainda não foi mergeada: $title\"}" $WEBHOOK_URL

              # Verifica PR onde mudanças foram solicitadas
              elif [[ $reviewDecision == "CHANGES_REQUESTED" ]]; then
                curl -X POST -H "Content-Type: application/json" \
                -d "{\"text\":\"PR $title está aguardando alterações solicitadas pelos revisores.\"}" $WEBHOOK_URL
              fi
            done
          fi
